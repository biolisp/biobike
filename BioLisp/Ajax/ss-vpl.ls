;;; -*-lisp-*-

(defun setup ()
  (send-text-to-ss-vpl "hello"))

(defun send-text-to-ss-vpl (text)
  (.send channel (make-simple-message-for-app "SS-VPL" text)))

(defun ss-vpl-on-message (message)
  (let ((body (.get-element-by-id document "thebody")))
    (while (= (@ message node-type) 3)
      (set message (@ message next-sibling)))
    (let ((message-type (@ message node-name)))
      (cond
	((string= message-type "palette")
	 (.replace-child body (xml-to-html (@ message first-child)) (.get-element-by-id document "palette")))
	((string= message-type "workarea")
	 (.replace-child body (xml-to-html (@ message first-child)) (.get-element-by-id document "workarea")))
	(true 
	 (debug "Unown verb " message-type))))))

(defun xml-to-html (xml)
  (case (@ xml node-type)
    ((@ Node ELEMENT_NODE)
     (let ((html (.create-element document (@ xml node-name))))
       (when (.has-attributes xml)
	 (let ((attributes (@ xml attributes)))
	   (dotimes (i (@ attributes length))
	     (.set-named-item (@ html attributes) (xml-to-html (.item attributes i))))))
       (when (.has-child-nodes xml)
	 (let ((children (@ xml child-nodes)))
	   (dotimes (i (@ children length))
	     (.append-child html (xml-to-html (.item children i))))))
       html))
    ((@ Node ATTRIBUTE_NODE)
     (let ((html (.create-attribute document (@ xml name))))
       (set (@ html value) (@ xml value))
       html))
    ((@ Node TEXT_NODE)
     (.create-text-node document (@ xml data)))
    ((@ Node CDATA_SECTION_NODE)
     (alert "nyi - CDATA_SECTION_NODE"))
    ((@ Node ENTITY_REFERENCE_NODE)
     (alert "nyi - ENTITY_REFERENCE_NODE"))
    ((@ Node ENTITY_NODE)
     (alert "nyi - ENTITY_NODE"))
    ((@ Node PROCESSING_INSTRUCTION_NODE)
     (alert "nyi - PROCESSING_INSTRUCTION_NODE"))
    ((@ Node COMMENT_NODE)
     (alert "nyi - COMMENT_NODE"))
    ((@ Node DOCUMENT_NODE)
     (alert "nyi - DOCUMENT_NODE"))
    ((@ Node DOCUMENT_TYPE_NODE)
     (alert "nyi - DOCUMENT_TYPE_NODE"))
    ((@ Node DOCUMENT_FRAGMENT_NODE)
     (alert "nyi - DOCUMENT_FRAGMENT_NODE"))
    ((@ Node NOTATION_NODE)
     (alert "nyi - NOTATION_NODE"))))

(set (@ window onclick) (lambda (e) (send-text-to-ss-vpl "click")))

(.register-message-handler channel "ss-vpl" ss-vpl-on-message)
